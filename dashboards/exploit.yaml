dashboard:
  annotations:
    list:
    - builtIn: 1
      datasource:
        type: grafana
        uid: -- Grafana --
      enable: true
      hide: true
      iconColor: rgba(0, 211, 255, 1)
      name: Annotations & Alerts
      type: dashboard
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      enable: false
      iconColor: purple
      name: New Exploit Version
      target:
        editorMode: code
        format: table
        rawQuery: true
        rawSql: |-
          SELECT exploits.id, exploits.exploit_history_id, exploits.active, exploits.author, timestamp FROM
            exploits
            INNER JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          WHERE exploit_histories.id IN ( $exploit_history )
          GROUP BY exploits.id, exploit_histories.id
          ORDER BY exploits.timestamp DESC;
        refId: Anno
        sql:
          columns:
          - parameters: []
            type: function
          groupBy:
          - property:
              type: string
            type: groupBy
          limit: 50
  editable: true
  fiscalYearStartMonth: 0
  graphTooltip: 2
  links: []
  panels:
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    fieldConfig:
      defaults:
        color:
          mode: fixed
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
      overrides: []
    gridPos:
      h: 6
      w: 12
      x: 0
      y: 0
    id: 2
    options:
      colorMode: value
      graphMode: area
      justifyMode: center
      orientation: auto
      percentChangeColorMode: standard
      reduceOptions:
        calcs:
        - lastNotNull
        fields: /^service$/
        values: true
      showPercentChange: false
      textMode: auto
      wideLayout: true
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      rawQuery: true
      rawSql: |-
        SELECT
          exploit_histories.service
        FROM
          exploit_histories
        WHERE
          exploit_histories.id IN ( $exploit_history )
        GROUP BY
          exploit_histories.service
      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: Service
    type: stat
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: Flags per tick
          axisPlacement: auto
          axisSoftMin: 0
          barAlignment: 0
          barWidthFactor: 0.6
          drawStyle: line
          fillOpacity: 0
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: 3600000
          lineInterpolation: linear
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: none
          thresholdsStyle:
            mode: 'off'
        decimals: 0
        mappings: []
        min: 0
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: none
      overrides: []
    gridPos:
      h: 12
      w: 12
      x: 12
      y: 0
    id: 5
    options:
      legend:
        calcs: []
        displayMode: list
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: none
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      hide: false
      rawQuery: true
      rawSql: |-
        SELECT
          COALESCE(COUNT(flags.id), 0) AS "OK",
          date_bin(INTERVAL '$tick_time', executions.timestamp, TIMESTAMP '$ctf_start'),
          targets.ip
        FROM
          executions
          INNER JOIN jobs ON jobs.id = executions.job_id
          INNER JOIN exploits ON jobs.exploit_id = exploits.id
          INNER JOIN targets ON targets.id = executions.target_id
          LEFT JOIN flags ON flags.execution_id = executions.id
        WHERE
          COALESCE(flags.status = 'OK', True)
          AND exploits.exploit_history_id in ($exploit_history)
          AND $__timeFilter(executions.timestamp)
        GROUP BY
          date_bin(INTERVAL '$tick_time', executions.timestamp, TIMESTAMP '$ctf_start'),
          targets.ip
        ORDER BY
          date_bin(INTERVAL '$tick_time', executions.timestamp, TIMESTAMP '$ctf_start'),
          inet(targets.ip)
        ;
      refId: A
      sql:
        columns:
        - parameters:
          - name: '*'
            type: functionParameter
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
      table: executions
    title: 'OK Flags per victim '
    transformations:
    - id: groupingToMatrix
      options:
        columnField: ip
        rowField: date_bin
        valueField: OK
    - id: convertFieldType
      options:
        conversions:
        - destinationType: time
          targetField: date_bin\ip
        fields: {}
    type: timeseries
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    description: ''
    fieldConfig:
      defaults:
        color:
          mode: continuous-RdYlGr
        decimals: 0
        mappings: []
        min: 0
        noValue: '0'
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: none
      overrides: []
    gridPos:
      h: 6
      w: 4
      x: 0
      y: 6
    id: 9
    options:
      colorMode: value
      graphMode: area
      justifyMode: auto
      orientation: auto
      percentChangeColorMode: standard
      reduceOptions:
        calcs:
        - lastNotNull
        fields: ''
        values: false
      showPercentChange: false
      textMode: auto
      wideLayout: true
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      hide: false
      rawQuery: true
      rawSql: |
        SELECT
          COUNT(flags.id)
        FROM
          executions
          INNER JOIN jobs ON jobs.id = executions.job_id
          INNER JOIN exploits ON jobs.exploit_id = exploits.id
          INNER JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          LEFT JOIN flags ON flags.execution_id = executions.id
        WHERE
          flags.status = 'OK'
          AND exploit_histories.id IN ( $exploit_history )
          AND executions.timestamp BETWEEN
            date_bin(INTERVAL '$tick_time', (TIMESTAMP $__timeTo()) - INTERVAL '$tick_time', TIMESTAMP '$ctf_start')
            AND date_bin(INTERVAL '$tick_time', $__timeTo(), TIMESTAMP '$ctf_start')
      refId: A
      sql:
        columns:
        - parameters:
          - name: '*'
            type: functionParameter
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
      table: executions
    title: Flags last tick
    type: stat
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: text
            value: null
      overrides: []
    gridPos:
      h: 6
      w: 4
      x: 4
      y: 6
    id: 15
    options:
      colorMode: value
      graphMode: none
      justifyMode: center
      orientation: auto
      percentChangeColorMode: standard
      reduceOptions:
        calcs:
        - lastNotNull
        fields: /.*/
        values: false
      showPercentChange: false
      textMode: value
      wideLayout: true
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      rawQuery: true
      rawSql: SELECT CAST(EXTRACT(EPOCH FROM (TIMESTAMP $__timeTo() - TIMESTAMP '$ctf_start'))
        AS INTEGER) / CAST(EXTRACT(EPOCH FROM INTERVAL '$tick_time') AS INTEGER) as
        current_tick;
      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: Current tick
    type: stat
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    description: ''
    fieldConfig:
      defaults:
        color:
          mode: continuous-RdYlGr
        fieldMinMax: false
        mappings: []
        min: 0
        noValue: '0'
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
      overrides: []
    gridPos:
      h: 6
      w: 4
      x: 8
      y: 6
    id: 3
    options:
      minVizHeight: 100
      minVizWidth: 75
      orientation: auto
      reduceOptions:
        calcs:
        - lastNotNull
        fields: /^Exploitable$/
        values: false
      showThresholdLabels: true
      showThresholdMarkers: false
      sizing: auto
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      hide: false
      rawQuery: true
      rawSql: |
        SELECT
          COUNT(DISTINCT targets.ip) AS "All"
        FROM
          targets
          JOIN executions ON executions.target_id = targets.id
          JOIN jobs ON jobs.id = executions.job_id
          JOIN exploits ON exploits.id = jobs.exploit_id
          JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          LEFT OUTER JOIN exclusions ON exclusions.target_ip = targets.ip AND exclusions.exploit_history_id = exploit_histories.id
        WHERE
          exploit_histories.id IN ( $exploit_history )
          AND exclusions.target_ip IS NULL
          AND executions.timestamp BETWEEN
            date_bin(INTERVAL '$tick_time', (TIMESTAMP $__timeTo()) - INTERVAL '$tick_time', TIMESTAMP '$ctf_start')
            AND date_bin(INTERVAL '$tick_time', $__timeTo(), TIMESTAMP '$ctf_start')
        ;
      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      hide: false
      rawQuery: true
      rawSql: |
        SELECT
          COUNT(DISTINCT targets.ip) as "Exploitable"
        FROM
          targets
          JOIN executions ON executions.target_id = targets.id
          JOIN jobs ON jobs.id = executions.job_id
          JOIN exploits ON exploits.id = jobs.exploit_id
          JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          LEFT OUTER JOIN exclusions ON exclusions.target_ip = targets.ip AND exclusions.exploit_history_id = exploit_histories.id
          LEFT OUTER JOIN flags ON flags.execution_id = executions.id
        WHERE
          exploit_histories.id IN ( $exploit_history )
          AND exclusions.target_ip IS NULL
          AND flags.status = 'OK'
          AND executions.timestamp BETWEEN
            date_bin(INTERVAL '$tick_time', (TIMESTAMP $__timeTo()) - INTERVAL '$tick_time', TIMESTAMP '$ctf_start')
            AND date_bin(INTERVAL '$tick_time', $__timeTo(), TIMESTAMP '$ctf_start')
      refId: B
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: Exploitable Targets
    transformations:
    - disabled: true
      id: configFromData
      options:
        applyTo:
          id: byName
          options: All
        configRefId: A
        mappings:
        - fieldName: All
          handlerKey: max
    type: gauge
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    description: ''
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        custom:
          align: auto
          cellOptions:
            type: auto
          inspect: false
        links: []
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
      overrides:
      - matcher:
          id: byName
          options: Active
        properties:
        - id: custom.cellOptions
          value:
            type: color-text
        - id: mappings
          value:
          - options:
              'true':
                index: 0
                text: Active
            type: value
    gridPos:
      h: 6
      w: 16
      x: 0
      y: 12
    id: 6
    options:
      cellHeight: sm
      footer:
        countRows: false
        fields: ''
        reducer:
        - sum
        show: false
      showHeader: true
      sortBy: []
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      rawQuery: true
      rawSql: |+
        SELECT
          exploit_histories.service AS "Service",
          exploits.id AS "Exploit",
          exploits.exploit_history_id AS "Exploit History",
          active AS "Active",
          author AS "Author",
          exploits.timestamp AS "Timestamp"
        FROM
          exploits
          INNER JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
        WHERE
          exploit_histories.id IN ( $exploit_history )
        ORDER BY exploits.timestamp DESC;

      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: Exploits
    type: table
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: ''
          axisPlacement: auto
          axisSoftMin: 0
          barAlignment: 0
          barWidthFactor: 0.6
          drawStyle: line
          fillOpacity: 0
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: 3600000
          lineInterpolation: linear
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: none
          thresholdsStyle:
            mode: 'off'
        decimals: 0
        mappings: []
        min: 0
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: none
      overrides: []
    gridPos:
      h: 14
      w: 8
      x: 16
      y: 12
    id: 14
    options:
      legend:
        calcs: []
        displayMode: list
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: none
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      hide: false
      rawQuery: true
      rawSql: |
        SELECT
          COUNT(DISTINCT targets.ip) AS "exploitable",
          date_bin(INTERVAL '$tick_time', executions.timestamp - INTERVAL '$tick_time', TIMESTAMP '$ctf_start') AS time
        FROM
          targets
          JOIN executions ON executions.target_id = targets.id
          LEFT JOIN flags ON flags.execution_id = executions.id
          JOIN jobs ON jobs.id = executions.job_id
          JOIN exploits ON exploits.id = jobs.exploit_id
          JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          LEFT OUTER JOIN exclusions ON exclusions.target_ip = targets.ip AND exclusions.exploit_history_id = exploit_histories.id
        WHERE
          exploit_histories.id IN ( $exploit_history )
          AND exclusions.target_ip IS NULL
          AND $__timeFilter(executions.timestamp)
          AND flags.status = 'OK'
        GROUP BY
          date_bin(INTERVAL '$tick_time', executions.timestamp - INTERVAL '$tick_time', TIMESTAMP '$ctf_start')
        HAVING
          COUNT(flags.id) > 0
        ;
      refId: A
      sql:
        columns:
        - parameters:
          - name: '*'
            type: functionParameter
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
      table: executions
    title: Victims with OK flags
    transformations:
    - id: groupingToMatrix
      options:
        columnField: ip
        rowField: date_bin
        valueField: OK
    - id: convertFieldType
      options:
        conversions:
        - destinationType: time
          targetField: date_bin\ip
        fields: {}
    type: timeseries
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: ''
          axisPlacement: auto
          barAlignment: 0
          barWidthFactor: 0.6
          drawStyle: line
          fillOpacity: 20
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: false
          lineInterpolation: stepAfter
          lineStyle:
            fill: solid
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: normal
          thresholdsStyle:
            mode: 'off'
        mappings: []
        min: 0
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: ''
      overrides:
      - matcher:
          id: byName
          options: UNKNOWN
        properties:
        - id: color
          value:
            fixedColor: white
            mode: fixed
      - matcher:
          id: byName
          options: OK
        properties:
        - id: color
          value:
            fixedColor: green
            mode: fixed
      - matcher:
          id: byName
          options: QUEUED
        properties:
        - id: color
          value:
            fixedColor: yellow
            mode: fixed
      - matcher:
          id: byName
          options: PENDING
        properties:
        - id: color
          value:
            fixedColor: purple
            mode: fixed
      - matcher:
          id: byName
          options: DUPLICATE
        properties:
        - id: color
          value:
            fixedColor: '#717171'
            mode: fixed
      - matcher:
          id: byName
          options: DUPLICATE_NOT_SUBMITTED
        properties:
        - id: color
          value:
            fixedColor: '#717171'
            mode: fixed
      - matcher:
          id: byName
          options: ERROR
        properties:
        - id: color
          value:
            fixedColor: red
            mode: fixed
      - matcher:
          id: byName
          options: NOP
        properties:
        - id: color
          value:
            fixedColor: orange
            mode: fixed
      - matcher:
          id: byName
          options: OWNFLAG
        properties:
        - id: color
          value:
            fixedColor: orange
            mode: fixed
      - matcher:
          id: byName
          options: INACTIVE
        properties:
        - id: color
          value:
            fixedColor: dark-orange
            mode: fixed
      - matcher:
          id: byName
          options: INVALID
        properties:
        - id: color
          value:
            fixedColor: orange
            mode: fixed
      - matcher:
          id: byName
          options: RESUBMIT
        properties:
        - id: color
          value:
            fixedColor: blue
            mode: fixed
      - matcher:
          id: byName
          options: <Null>
        properties:
        - id: color
          value:
            fixedColor: '#ffffff'
            mode: fixed
    gridPos:
      h: 8
      w: 16
      x: 0
      y: 18
    id: 4
    options:
      legend:
        calcs: []
        displayMode: list
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: none
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      rawQuery: true
      rawSql: |
        SELECT
          date_bin(INTERVAL '$tick_time', executions.timestamp, TIMESTAMP '$ctf_start'),
          COALESCE(flags.status::TEXT, '<Null>') as status,
          COALESCE(COUNT(flags.id), 0) as flags
        FROM executions
          LEFT JOIN flags on flags.execution_id = executions.id
          INNER JOIN jobs on jobs.id = executions.job_id
          INNER JOIN exploits on jobs.exploit_id = exploits.id
          INNER JOIN exploit_histories on exploit_histories.id = exploits.exploit_history_id
        WHERE
          exploit_histories.id in ($exploit_history)
          AND $__timeFilter(executions.timestamp)
        GROUP BY
          flags.status,
          date_bin(INTERVAL '$tick_time', executions.timestamp, TIMESTAMP '$ctf_start')
        ORDER BY
          date_bin(INTERVAL '$tick_time', executions.timestamp, TIMESTAMP '$ctf_start')
      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: Flag status per tick
    transformations:
    - id: groupingToMatrix
      options:
        columnField: status
        emptyValue: empty
        rowField: date_bin
        valueField: flags
    - id: convertFieldType
      options:
        conversions:
        - destinationType: time
          targetField: date_bin\status
        fields: {}
    - id: organize
      options:
        excludeByName:
          <Null>: true
          date_bin\status: false
          date_trunc\status: false
        includeByName: {}
        indexByName:
          <Null>: 1
          DUPLICATE: 5
          ERROR: 2
          INACTIVE: 4
          INVALID: 3
          OK: 7
          PENDING: 8
          QUEUED: 6
          date_bin\status: 0
        renameByName:
          <Null>: ''
          DUPLICATE_NOT_SUBMITTED: ''
          PENDING: ''
          date_trunc\status: ''
    type: timeseries
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    description: ''
    fieldConfig:
      defaults:
        color:
          mode: continuous-RdYlGr
        custom:
          align: auto
          cellOptions:
            type: auto
          inspect: false
          minWidth: 50
        fieldMinMax: false
        links:
        - targetBlank: true
          title: ''
          url: /d/ataka_execution_3f9c1bc9e4/exploit-details?${__url_time_range}&var-target=${__data.fields.ip\exploit_id:url}&var-exploit=${__field.name:url}
        mappings:
        - options:
            match: 'null'
            result:
              index: 0
              text: '0'
          type: special
        thresholds:
          mode: percentage
          steps:
          - color: semi-dark-red
            value: null
          - color: semi-dark-green
            value: 80
      overrides:
      - matcher:
          id: byType
          options: number
        properties:
        - id: custom.cellOptions
          value:
            type: color-text
    gridPos:
      h: 11
      w: 24
      x: 0
      y: 26
    id: 13
    options:
      cellHeight: sm
      footer:
        countRows: false
        fields: ''
        reducer:
        - sum
        show: true
      frameIndex: 1
      showHeader: true
      sortBy:
      - desc: false
        displayName: 0day_invalid_whitelist_check-2
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      rawQuery: true
      rawSql: |
        SELECT
          targets.ip,
          exploits.id AS "exploit_id",
          COUNT(flag_exec.id) AS ok_flag_count
        FROM
          targets
          CROSS JOIN exploits
          JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          LEFT OUTER JOIN (
            SELECT
              executions.*,
              jobs.exploit_id AS "exploit_id"
            FROM
              executions
              JOIN jobs ON jobs.id = executions.job_id
              JOIN flags ON flags.execution_id = executions.id
            WHERE
              flags.status = 'OK'
              AND executions.timestamp BETWEEN
                date_bin(INTERVAL '$tick_time', (TIMESTAMP $__timeTo()) - INTERVAL '$tick_time', TIMESTAMP '$ctf_start')
                AND date_bin(INTERVAL '$tick_time', $__timeTo(), TIMESTAMP '$ctf_start')
          ) AS "flag_exec" ON (flag_exec.target_id = targets.id) AND (flag_exec.exploit_id = exploits.id)
        WHERE
          exploit_histories.id IN ( $exploit_history )
        GROUP BY
          targets.ip,
          exploits.id
        ORDER BY
          exploits.id,
          inet(targets.ip)
        ;
      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: OK Flags - last tick
    transformations:
    - id: groupingToMatrix
      options:
        columnField: exploit_id
        emptyValue: 'null'
        rowField: ip
        valueField: ok_flag_count
    - id: calculateField
      options:
        mode: reduceRow
        reduce:
          reducer: sum
        replaceFields: false
    type: table
  - datasource:
      default: false
      type: grafana-postgresql-datasource
      uid: ${ataka_database}
    fieldConfig:
      defaults:
        color:
          mode: continuous-RdYlGr
        custom:
          align: auto
          cellOptions:
            type: auto
          inspect: false
          minWidth: 50
        fieldMinMax: false
        mappings:
        - options:
            match: 'null'
            result:
              index: 0
              text: '0'
          type: special
        thresholds:
          mode: percentage
          steps:
          - color: semi-dark-red
            value: null
          - color: semi-dark-green
            value: 80
      overrides:
      - matcher:
          id: byType
          options: number
        properties:
        - id: custom.cellOptions
          value:
            type: color-text
    gridPos:
      h: 13
      w: 24
      x: 0
      y: 37
    id: 12
    options:
      cellHeight: sm
      footer:
        countRows: false
        fields: ''
        reducer:
        - sum
        show: true
      frameIndex: 1
      showHeader: true
    pluginVersion: 11.2.0
    targets:
    - datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      editorMode: code
      format: table
      rawQuery: true
      rawSql: |
        SELECT
          targets.ip,
          exploits.id AS "exploit_id",
          COUNT(flag_exec.id) AS ok_flag_count
        FROM
          targets
          CROSS JOIN exploits
          JOIN exploit_histories ON exploit_histories.id = exploits.exploit_history_id
          LEFT OUTER JOIN (
            SELECT
              executions.*,
              jobs.exploit_id AS "exploit_id"
            FROM
              executions
              JOIN jobs ON jobs.id = executions.job_id
              JOIN flags ON flags.execution_id = executions.id
            WHERE
              flags.status = 'OK'
          ) AS "flag_exec" ON (flag_exec.target_id = targets.id) AND (flag_exec.exploit_id = exploits.id)
        WHERE
          exploit_histories.id IN ( $exploit_history )
        GROUP BY
          targets.ip,
          exploits.id
        ORDER BY
          exploits.id,
          inet(targets.ip)
        ;
      refId: A
      sql:
        columns:
        - parameters: []
          type: function
        groupBy:
        - property:
            type: string
          type: groupBy
        limit: 50
    title: OK Flags - total
    transformations:
    - id: groupingToMatrix
      options:
        columnField: exploit_id
        emptyValue: 'null'
        rowField: ip
        valueField: ok_flag_count
    - id: calculateField
      options: {}
    type: table
  refresh: 30s
  schemaVersion: 39
  tags: []
  templating:
    list:
    - current:
        selected: false
        text: All
        value: $__all
      datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      definition: SELECT targets.service FROM targets GROUP BY targets.service ORDER
        BY targets.service;
      hide: 0
      includeAll: true
      multi: true
      name: services
      options: []
      query: SELECT targets.service FROM targets GROUP BY targets.service ORDER BY
        targets.service;
      refresh: 1
      regex: ''
      skipUrlSync: false
      sort: 0
      type: query
    - hide: 2
      name: tick_time
      query: 1m
      skipUrlSync: false
      type: constant
    - current:
        selected: false
        text: All
        value: $__all
      datasource:
        type: grafana-postgresql-datasource
        uid: ${ataka_database}
      definition: |-
        SELECT exploit_histories.id
        FROM exploit_histories
        WHERE exploit_histories.service IN ($services);
      hide: 0
      includeAll: true
      label: Exploit History
      multi: true
      name: exploit_history
      options: []
      query: |-
        SELECT exploit_histories.id
        FROM exploit_histories
        WHERE exploit_histories.service IN ($services);
      refresh: 1
      regex: ''
      skipUrlSync: false
      sort: 0
      type: query
    - current:
        selected: false
        text: ataka-postgresql
        value: cdxbc5hy5adj4b
      hide: 0
      includeAll: false
      multi: false
      name: ataka_database
      options: []
      query: grafana-postgresql-datasource
      queryValue: ''
      refresh: 1
      regex: ''
      skipUrlSync: false
      type: datasource
    - hide: 2
      name: ctf_start
      query: '1970-00-00T00:00:00.000Z'
      skipUrlSync: false
      type: constant
  time:
    from: now-6h
    to: now
  timepicker: {}
  timezone: browser
  title: Exploit Details
  uid: ataka_exploit_3f9c1bc9e4
  weekStart: ''
overwrite: true
